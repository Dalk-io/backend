name: Deploy to production

on:
  push:
    tags:
      - "*-production.*"
      - "*-production"

jobs:
  build_and_deploy_to_production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Remove backend folder
        run: ssh root@51.15.215.104 'rm -rf backend'
      - name: Create backend folder
        run: ssh root@51.15.215.104 'mkdir backend'
      - name: Upload backend files
        run: scp -r bin lib pubspec.yaml pubspec.lock root@51.15.215.104:/root/backend
      - name: Connect to staging server, build, compile and launch
        run: |
          ssh root@51.15.215.104 bash << 'ENDSSH'
            cd backend
            killall main.exe || echo "Process was not running."
            killall dart || echo "Process was not running."
            /usr/lib/dart/bin/pub get
            /usr/lib/dart/bin/pub run build_runner build --delete-conflicting-outputs
            DATABASE_HOST=${{ secrets.PRODUCTION_DATABASE_HOST }} DATABASE_PORT=${{ secrets.PRODUCTION_DATABASE_PORT }} DATABASE_NAME=${{ secrets.PRODUCTION_DATABASE_NAME }} DATABASE_USERNAME=${{ secrets.PRODUCTION_DATABASE_USERNAME }} DATABASE_PASSWORD="${{ secrets.PRODUCTION_DATABASE_PASSWORD }}" /usr/lib/dart/bin/dart bin/migration.dart
            /usr/lib/dart/bin/dart2native bin/main.dart
            cd ..
            PADDLE_VENDOR_ID=${{ secrets.PADDLE_VENDOR_ID }} PADDLE_AUTH_CODE=${{ secrets.PADDL_AUTH_CODE }} DATABASE_HOST=${{ secrets.PRODUCTION_DATABASE_HOST }} DATABASE_PORT=${{ secrets.PRODUCTION_DATABASE_PORT }} DATABASE_NAME=${{ secrets.PRODUCTION_DATABASE_NAME }} DATABASE_USERNAME=${{ secrets.PRODUCTION_DATABASE_USERNAME }} DATABASE_PASSWORD="${{ secrets.PRODUCTION_DATABASE_PASSWORD }}" nohup backend/bin/main.exe >> backend.log 2>&1 &
          ENDSSH
